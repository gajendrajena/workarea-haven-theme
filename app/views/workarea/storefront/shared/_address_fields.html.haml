- title_label = label.gsub(/_/, ' ').capitalize

.address-fields
  .grid
    .grid__cell.grid__cell--50-at-medium
      .property{ class: ('property--invalid' if address.errors[:first_name].present?) }
        = label_tag "#{label}[first_name]", nil, class: 'property__name' do
          %span.property__requirement.property__requirement--required= t('workarea.storefront.forms.required')
          %span.property__text= t('workarea.storefront.addresses.first_name')
        .value.value--block
          = text_field_tag "#{label}[first_name]", address.first_name, class: 'text-box text-box--full', required: true, title: "#{title_label} #{t('workarea.storefront.addresses.first_name')}", autocomplete: 'given-name', autocorrect: 'off'
          - if address.errors[:first_name].present?
            %span.value__error= address.errors[:first_name].first
    .grid__cell.grid__cell--50-at-medium
      .property{ class: ('property--invalid' if address.errors[:last_name].present?) }
        = label_tag "#{label}[last_name]", nil, class: 'property__name' do
          %span.property__requirement.property__requirement--required= t('workarea.storefront.forms.required')
          %span.property__text= t('workarea.storefront.addresses.last_name')
        .value.value--block
          = text_field_tag "#{label}[last_name]", address.last_name, class: 'text-box text-box--full', required: true, autocomplete: 'family-name', autocorrect: 'off', title: "#{title_label} #{t('workarea.storefront.addresses.last_name')}"
          - if address.errors[:last_name].present?
            %span.value__error= address.errors[:last_name].first

  = optional_field(t('workarea.storefront.addresses.company_prompt'), address.company) do
    .property
      = label_tag "#{label}[company]", nil, class: 'property__name' do
        %span.property__text= t('workarea.storefront.addresses.company')
        %span.property__requirement.property__requirement--optional= t('workarea.storefront.forms.optional')
      .value.value--block= text_field_tag "#{label}[company]", address.company, class: 'text-box text-box--full', autocorrect: 'off', title: "#{title_label} #{t('workarea.storefront.addresses.company')}", autocomplete: 'organization'

  .property{ class: ('property--invalid' if address.errors[:street].present?) }
    = label_tag "#{label}[street]", nil, class: 'property__name' do
      %span.property__requirement.property__requirement--required= t('workarea.storefront.forms.required')
      %span.property__text= t('workarea.storefront.addresses.street')
    .value.value--block
      = text_field_tag "#{label}[street]", address.street, class: 'text-box text-box--full', required: true, autocomplete: 'address-line1', autocorrect: 'off', title: "#{title_label} #{t('workarea.storefront.addresses.street')}"
      - if address.errors[:street].present?
        %span.value__error= address.errors[:street].first
      -# TODO - Uncomment this once v3.3 is released
      -# - unless address.allow_po_box?
      -#   %span.value__note= t('workarea.storefront.addresses.no_po_boxes')

  .property{ class: ('property--invalid' if address.errors[:street_2].present?) }
    = label_tag "#{label}[street_2]", nil, class: 'property__name' do
      %span.property__text= t('workarea.storefront.addresses.street_2')
      %span.property__requirement.property__requirement--optional= t('workarea.storefront.forms.optional')
    .value.value--block
      = text_field_tag "#{label}[street_2]", address.street_2, class: 'text-box text-box--full', autocomplete: 'address-line2', autocorrect: 'off', title: "#{title_label} #{t('workarea.storefront.addresses.street_2')}"
      - if address.errors[:street_2].present?
        %span.value__error= address.errors[:street_2].first

  .property{ class: ('property--invalid' if address.errors[:city].present?) }
    = label_tag "#{label}[city]", nil, class: 'property__name' do
      %span.property__requirement.property__requirement--required= t('workarea.storefront.forms.required')
      %span.property__text= t('workarea.storefront.addresses.city')
    .value.value--block
      = text_field_tag "#{label}[city]", address.city, class: 'text-box text-box--full', required: true, autocomplete: 'address-level2', autocorrect: 'off', title: "#{title_label} #{t('workarea.storefront.addresses.city')}"
      - if address.errors[:city].present?
        %span.value__error= address.errors[:city].first
      - if address.errors[:city].present?
        %span.value__error= address.errors[:city].first

  .property{ class: ('property--invalid' if address.errors[:country].present?), data: { address_region_fields: 'country' } }
    = label_tag "#{label}[country]", nil, class: 'property__name' do
      %span.property__requirement.property__requirement--required= t('workarea.storefront.forms.required')
      %span.property__text= t('workarea.storefront.addresses.country')
    .value.value--block
      - options = options_for_select(country_options, address.country.try(:alpha2))
      = select_tag "#{label}[country]", options, title: "#{title_label} #{t('workarea.storefront.addresses.country')}"
      - if address.errors[:country].present?
        %span.value__error= address.errors[:country].first

  .grid
    .grid__cell.grid__cell--50-at-medium
      .property{ class: ('property--invalid' if address.errors[:region].present?), data: { address_region_fields: 'region' } }
        = label_tag "#{label}[region]", nil, class: 'property__name' do
          %span.property__requirement.property__requirement--required= t('workarea.storefront.forms.required')
          %span.property__text= t('workarea.storefront.addresses.region')
        .value.value--block
          - options = grouped_options_for_select(region_options, address.region, prompt: t('workarea.storefront.addresses.select_state'))
          = select_tag "#{label}_region_select", options, required: true, title: "#{title_label} #{t('workarea.storefront.addresses.region')}", class: 'hidden'
          = text_field_tag "#{label}[region]", address.region, class: 'text-box text-box--full', autocorrect: 'off', title: "#{title_label} #{t('workarea.storefront.addresses.region')}"
          - if address.errors[:region].present?
            %span.value__error= address.errors[:region].first

    .grid__cell.grid__cell--50-at-medium
      .property{ class: ('property--invalid' if address.errors[:postal_code].present?) }
        = label_tag "#{label}[postal_code]", nil, class: 'property__name' do
          %span.property__requirement.property__requirement--required= t('workarea.storefront.forms.required')
          %span.property__text= t('workarea.storefront.addresses.postal_code')
        .value.value--block
          = text_field_tag "#{label}[postal_code]", address.postal_code, class: 'text-box text-box--full', required: true, autocorrect: 'off', autocomplete: 'postal-code', title: "#{title_label} #{t('workarea.storefront.addresses.postal_code')}"
          - if address.errors[:postal_code].present?
            %span.value__error= address.errors[:postal_code].first

  .property
    = label_tag "#{label}[phone_number]", nil, class: 'property__name' do
      %span.property__text= t('workarea.storefront.addresses.phone_number')
      %span.property__requirement.property__requirement--optional= t('workarea.storefront.forms.optional')
    .value.value--block= telephone_field_tag "#{label}[phone_number]", number_to_phone(address.phone_number), autocorrect: 'off', autocomplete: 'tel', class: 'text-box text-box--full', placeholder: '555-555-5555', title: "#{title_label} #{t('workarea.storefront.addresses.phone_number')}", pattern: '[0-9-]+'
