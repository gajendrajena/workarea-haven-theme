#reviews.product-detail-container__section.product-detail-container__section--reviews
  .product-detail-container__section-overlay-controls
    = button_tag value: 'back_to_product', type: 'button', class: 'text-button', data: { product_detail_tabs_close_overlay: '' } do
      = inline_svg('workarea/storefront/icons/long_arrow.svg', class: 'product-detail-container__section-back-icon', title: t('workarea.storefront.layouts.navigate_back'))
      = t('workarea.storefront.products.back_to_product')
  .reviews
    .product-detail-container__section-header
      .reviews__header
        %h2.product-detail-container__section-heading= t('workarea.storefront.reviews.reviews', count: product.reviews.length)
        - if product.has_reviews?
          .reviews__sort

    .product-detail-container__section-content
      - if product.has_reviews?
        .reviews
          %ol.reviews__review-group
            - product.reviews.each do |review|
              %li.reviews__review{ data: { product_review_section_entry: { rating: review.rating.to_f, createdAt: review.created_at.to_i }.to_json } }
                = rating_stars(review.rating)

                %h3.reviews__review-title= review.title
                %p.reviews__review-body= review.body
                .reviews__review-meta
                  %p.reviews__review-author
                    %span= review.user_info
                  - if review.verified?
                    %p.reviews__review-verified= t('workarea.storefront.reviews.verified_purchaser')
                  %p.reviews__review-date= local_time(review.created_at, format: :long, itemprop: 'datePublished')
      - else
        %p= t('workarea.storefront.reviews.first_review_for_product', product: product.name)

      .reviews__write-action= link_to t('workarea.storefront.reviews.write_a_review'), new_product_review_path(product), class: 'button', data: { dialog_button: '' }
      - if display_purchase_requirement_message
        %span.reviews__write-purchase-requirement= t('workarea.storefront.reviews.purchase_requirement')
