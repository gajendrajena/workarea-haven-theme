/*------------------------------------*\
    #FORMS
\*------------------------------------*/

// scss-lint:disable QualifyingElement

$form-padding-right: 12px !default;
$forms-color: $input-color !default;
$forms-label-color: $label-color !default;
$forms-bg-color: $input-background-color !default;
$forms-disabled-color: $input-disabled-color !default;
$forms-disabled-bg-color: $input-disabled-background-color !default;
$forms-placeholder-color: $placeholder-color !default;
$forms-border-color-error: $invalid-color !default;

// Checkbox settings
$checkbox-size: 16px !default;
$checkbox-color: $input-checkbox-color !default;
$checkbox-border: 1px solid $input-checkbox-border-color !default;

$checkbox-fill-color: $input-checkbox-fill-color !default;
$checkbox-box-shadow: 0 0 0 0 $checkbox-fill-color inset !default;
$checkbox-box-shadow-checked: 0 0 0 ($checkbox-size / 2) $checkbox-fill-color inset !default;
$checkbox-easing-function: ease-in !default;

// Radio button settings
$radio-button-size: 16px !default;
$radio-button-inner-size: 4px !default;
$radio-button-color: $input-radio-color !default;
$radio-button-border: 1px solid $input-radio-border-color !default;

$radio-button-fill-color: $input-radio-fill-color !default;
$radio-button-box-shadow: 0 0 0 0 $radio-button-fill-color inset !default;
$radio-button-box-shadow-checked: 0 0 0 ($radio-button-size / 2) $radio-button-fill-color inset !default;
$radio-button-inner-bg-color: $input-radio-background-color !default;
$radio-button-easing-function: cubic-bezier(0.75, 0.01, 0.48, 2);

/**
 * Provide default margins for form containment elements.
 */
fieldset, legend {
    margin-bottom: $vertical-margin;
}


/**
 * Set a larger default font size for basic form controls
 */
select,
input, textarea {
    padding: $spacing-unit;
    padding-right: $form-padding-right;
    color: $forms-color;
    font-size: $form-control-font-size;
    background-color: $forms-bg-color;
    border: 0;
}

label {
    color: $forms-label-color;
    font-size: $form-control-font-size;
}


/**
 * For accessibility purposes, all input types are highlighted on focus.
 */
input, textarea,
select {
    &:focus {
        @include focus-ring;
    }
}


/**
 * Ensure select menus cannot exceed with width of their parents.
 * We use a trick on mobile to let the select gracefully truncates
 * his content.
 *
 * @url https://stackoverflow.com/a/10795269/1538101
 */
select {
    width: 100%;
    max-width: 100%;

    @include respond-to($medium-breakpoint) {
        width: auto;
    }
}


/**
 * Ensure text within in a `textarea` displays at the top of the element now
 * that they can be wrapped within a `display: table-cell` element.
 */
textarea {
    vertical-align: baseline;
}


/**
 * Ensure form controls in OSX will look more consistent with other OSes that do
 * not utilize sub-pixel anti-aliasing.
 */
select,
button,
input, textarea {
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing:  antialiased;
}


/**
 * Show clear indication that a form control is not interactive by changing the
 * cursor:
 *
 * 1. if the element itself is disabled or readonly
 * 2. if the fieldset wrapping the element is disabled
 */
button,
input, textarea,
select, optgroup, option {
    &[disabled], &[readonly], /* [1] */
    fieldset[disabled] & { /* [2] */
        color: $forms-disabled-color;
        background-color: $forms-disabled-bg-color;
        cursor: not-allowed;
    }
}


/**
 * Set default color for elements using `[placeholder]` attributes.
 */
::placeholder {
    color: $forms-placeholder-color;
}

/**
 * 1. animating box-shadow isn't preferable but it's the best way to acheive this effect
 */
input[type='checkbox'] {
    position: relative;
    width: $checkbox-size;
    height: $checkbox-size;
    border: $checkbox-border;
    border-radius: 50%;
    box-shadow: $checkbox-box-shadow;
    transition: box-shadow 0.15s $checkbox-easing-function; /* [1] */
    vertical-align: middle;
    appearance: none;

    &:after {
        display: block;
        position: absolute;
        top: -50%;
        width: $checkbox-size;
        height: $checkbox-size / 2;
        color: $checkbox-color;
        text-align: center;
        content: 'âœ“';
        opacity: 0;
        transform: scale(0.2) translateY(50%);
        transition: transform 0.15s $checkbox-easing-function, opacity 0.15s $checkbox-easing-function;
    }

    &:checked:after {
        opacity: 1;
        transform: scale(1) translate(-10%, 75%);
    }

    &:checked {
        box-shadow: $checkbox-box-shadow-checked;
    }

    &.visually-hidden {
        width: 0;
        height: 0;
        border: 0;

        &:after {
            display: none;
        }
    }
}

input[type='radio'] {
    position: relative;
    width: $radio-button-size;
    height: $radio-button-size;
    border: $radio-button-border;
    border-radius: 50%;
    box-shadow: $radio-button-box-shadow;
    transition: box-shadow 0.15s $radio-button-easing-function; /* [1] */
    appearance: none;
    vertical-align: middle;

    &:before {
        @include center;
        display: block;
        width: $radio-button-inner-size;
        height: $radio-button-inner-size;
        text-align: center;
        background-color: $radio-button-inner-bg-color;
        border-radius: 50%;
        opacity: 0;
        content: '';
        transform: translate(-50%, -50%);
        transition: transform 0.15s $radio-button-easing-function, opacity 0.15s $radio-button-easing-function;
    }

    &:checked:before {
        opacity: 1;
    }

    &:checked {
        box-shadow: $radio-button-box-shadow-checked;
    }

    &.visually-hidden {
        width: 0;
        height: 0;
        border: 0;

        &:before {
            display: none;
        }
    }
}
