module Workarea
  decorate Storefront::StoreCreditSystemTest, with: :haven_theme do
    def test_purchasing_with_store_credit
      setup_checkout_specs
      add_user_data
      set_store_credit(100.to_m)

      start_user_checkout

      assert_current_path(storefront.checkout_payment_path)
      assert(page.has_content?('22 S. 3rd St.'))
      assert(page.has_content?('Philadelphia'))
      assert(page.has_content?('PA'))
      assert(page.has_content?('19106'))
      assert(page.has_content?('Ground'))

      assert(page.has_content?('1019 S. 47th St.'))
      assert(page.has_content?('Philadelphia'))
      assert(page.has_content?('PA'))
      assert(page.has_content?('19143'))

      assert(page.has_content?(t('workarea.storefront.orders.store_credit')))

      assert(page.has_no_content?('Test Card')) # Don't show credit card if store credit covers full order amount
      assert(page.has_no_content?('XXXX-XXXX-XXXX-1'))

      assert(page.has_content?('Integration Product'))

      assert(page.has_content?('$5.00')) # Subtotal
      assert(page.has_content?('$7.00')) # Shipping
      assert(page.has_content?('$0.84')) # Tax
      assert(page.has_content?('$12.84')) # Store credit amount
      assert(page.has_content?('$0.00')) # Total less store credit

      click_button t('workarea.storefront.checkouts.place_order')

      assert(page.has_content?('Success'))
      assert(page.has_content?('Thanks'))
      assert(page.has_content?(Order.placed.first.id))

      assert(page.has_content?('22 S. 3rd St.'))
      assert(page.has_content?('Philadelphia'))
      assert(page.has_content?('PA'))
      assert(page.has_content?('19106'))
      assert(page.has_content?('Ground'))

      assert(page.has_content?('1019 S. 47th St.'))
      assert(page.has_content?('Philadelphia'))
      assert(page.has_content?('PA'))
      assert(page.has_content?('19143'))

      assert(page.has_content?(t('workarea.storefront.orders.store_credit')))

      assert(page.has_content?('Integration Product'))

      assert(page.has_content?('$5.00')) # Subtotal
      assert(page.has_content?('$7.00')) # Shipping
      assert(page.has_content?('$0.84')) # Tax
      assert(page.has_content?('$12.84')) # Store credit amount
      assert(page.has_content?('$0.00')) # Total less store credit
    end

    def test_purchasing_with_store_credit_and_credit_card
      setup_checkout_specs
      add_user_data
      set_store_credit(4.to_m)

      start_user_checkout

      assert_current_path(storefront.checkout_payment_path)
      assert(page.has_content?('Success'))
      assert(page.has_content?('22 S. 3rd St.'))
      assert(page.has_content?('Philadelphia'))
      assert(page.has_content?('PA'))
      assert(page.has_content?('19106'))
      assert(page.has_content?('Ground'))

      assert(page.has_content?('1019 S. 47th St.'))
      assert(page.has_content?('Philadelphia'))
      assert(page.has_content?('PA'))
      assert(page.has_content?('19143'))

      assert(page.has_content?('Test Card'))
      assert(page.has_content?('XX-1'))
      assert(page.has_content?(t('workarea.storefront.orders.store_credit')))

      assert(page.has_content?('Integration Product'))

      assert(page.has_content?('$5.00')) # Subtotal
      assert(page.has_content?('$7.00')) # Shipping
      assert(page.has_content?('$0.84')) # Tax
      assert(page.has_content?('$4.00')) # Store credit amount
      assert(page.has_content?('$8.84')) # Total less store credit

      click_button t('workarea.storefront.checkouts.place_order')

      assert(page.has_content?('Success'))
      assert(page.has_content?('Thanks'))
      assert(page.has_content?(Order.first.id))

      assert(page.has_content?('22 S. 3rd St.'))
      assert(page.has_content?('Philadelphia'))
      assert(page.has_content?('PA'))
      assert(page.has_content?('19106'))
      assert(page.has_content?('Ground'))

      assert(page.has_content?('1019 S. 47th St.'))
      assert(page.has_content?('Philadelphia'))
      assert(page.has_content?('PA'))
      assert(page.has_content?('19143'))

      assert(page.has_content?('Test Card'))
      assert(page.has_content?('XX-1'))
      assert(page.has_content?(t('workarea.storefront.orders.store_credit')))

      assert(page.has_content?('Integration Product'))

      assert(page.has_content?('$5.00')) # Subtotal
      assert(page.has_content?('$7.00')) # Shipping
      assert(page.has_content?('$0.84')) # Tax
      assert(page.has_content?('$4.00')) # Store credit amount
      assert(page.has_content?('$8.84')) # Total less store credit
    end
  end
end
