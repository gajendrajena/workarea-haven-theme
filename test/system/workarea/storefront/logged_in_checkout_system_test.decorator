require 'test_helper'

module Workarea
  decorate Storefront::LoggedInCheckoutSystemTest, with: :haven_theme do

    def test_preselecting_addresses_from_saved_addresses
      add_user_data

      user = User.find_by_email('bcrouse@workarea.com')
      user.auto_save_shipping_address(
        first_name: 'Ben',
        last_name: 'Crouse',
        street: '1525 Robson St.',
        city: 'Vancouver',
        region: 'BC',
        postal_code: 'V6G 1C3',
        country: 'CA',
        phone_number: '18444710783'
      )

      visit storefront.checkout_addresses_path

      select 'Ben Crouse 1019 S. 47th St. Philadelphia PA 19143', from: 'saved_addresses_0'
      assert_equal('US', find('select[name="shipping_address[country]"]').value)
      assert_equal('PA', find('#shipping_address_region_select').value)

      select 'Ben Crouse 1525 Robson St. Vancouver BC V6G 1C3', from: 'saved_addresses_0'
      assert_equal('CA', find('select[name="shipping_address[country]"]').value)
      assert_equal('BC', find('#shipping_address_region').value)

      select 'Ben Crouse 1019 S. 47th St. Philadelphia PA 19143', from: 'saved_addresses_1'
      assert_equal('US', find('select[name="billing_address[country]"]').value)
      assert_equal('PA', find('#billing_address_region_select').value)

      click_button t('workarea.storefront.checkouts.continue_to_shipping')

      assert(page.has_content?('1019 S. 47th St.'))
      assert(page.has_no_content?('22 S. 3rd St.'))
    end

    def test_successfully_compelting_checkout
      assert_current_path(storefront.checkout_payment_path)
      assert(page.has_content?('Info'))

      assert(page.has_content?('22 S. 3rd St.'))
      assert(page.has_content?('Philadelphia'))
      assert(page.has_content?('PA'))
      assert(page.has_content?('19106'))
      assert(page.has_content?('Ground'))

      assert(page.has_content?('Integration Product'))

      assert(page.has_content?('$5.00')) # Subtotal
      assert(page.has_content?('$7.00')) # Shipping
      assert(page.has_content?('$0.84')) # Tax
      assert(page.has_content?('$12.84')) # Total

      click_button t('workarea.storefront.checkouts.place_order')

      assert_current_path(storefront.checkout_confirmation_path)

      assert(page.has_content?('Success'))
      assert(page.has_content?('Thanks'))
      assert(page.has_content?(Order.first.id))

      assert(page.has_content?('22 S. 3rd St.'))
      assert(page.has_content?('Philadelphia'))
      assert(page.has_content?('PA'))
      assert(page.has_content?('19106'))
      assert(page.has_content?('Ground'))

      assert(page.has_content?('1019 S. 47th St.'))
      assert(page.has_content?('Philadelphia'))
      assert(page.has_content?('PA'))
      assert(page.has_content?('19143'))

      assert(page.has_content?('Test Card'))
      assert(page.has_content?('XX-1'))

      assert(page.has_content?('Integration Product'))

      assert(page.has_content?('$5.00')) # Subtotal
      assert(page.has_content?('$7.00')) # Shipping
      assert(page.has_content?('$0.84')) # Tax
      assert(page.has_content?('$12.84')) # Total
    end

    def test_express_checkout
      assert_current_path(storefront.checkout_payment_path)

      assert(page.has_content?('Ben'))
      assert(page.has_content?('Crouse'))
      assert(page.has_content?('1019 S. 47th St.'))
      assert(page.has_content?('Philadelphia'))
      assert(page.has_content?('19143'))
      assert(page.has_content?('PA'))
      assert(page.has_content?('US'))
      assert(page.has_content?('215-925-1800'))

      assert(page.has_content?('Ben'))
      assert(page.has_content?('Crouse'))
      assert(page.has_content?('22 S. 3rd St.'))
      assert(page.has_content?('Philadelphia'))
      assert(page.has_content?('19106'))
      assert(page.has_content?('PA'))
      assert(page.has_content?('US'))
      assert(page.has_content?('215-925-1800'))

      credit_card_id = Payment::SavedCreditCard.first.id
      assert(find_field("payment_#{credit_card_id}"))
      refute(find_field('payment_new_card')[:checked])

      assert(page.has_content?('Integration Product'))

      assert(page.has_content?('$5.00')) # Subtotal
      assert(page.has_content?('$7.00')) # Shipping
      assert(page.has_content?('$0.84')) # Tax
      assert(page.has_content?('$12.84')) # Total

      click_button t('workarea.storefront.checkouts.place_order')

      assert_current_path(storefront.checkout_confirmation_path)
      assert(page.has_content?('Success'))
    end
  end
end
