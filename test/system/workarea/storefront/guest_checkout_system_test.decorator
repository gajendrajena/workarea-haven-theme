require 'test_helper'

module Workarea
  decorate Storefront::GuestCheckoutSystemTest, with: :haven_theme do
    def test_checking_out_with_shipping_discount
      create_shipping_service(
        name: 'Next Day',
        tax_code: '001',
        rates: [{ price: 20.to_m }]
      )

      create_shipping_discount(
        name: 'Free Ground Shipping',
        amount: 0,
        shipping_service: 'Ground',
        promo_codes: ['FREESHIPPING']
      )

      visit storefront.cart_path
      assert(page.has_content?(t('workarea.storefront.carts.enter_promo_code_prompt')))
      click_button t('workarea.storefront.carts.enter_promo_code_prompt')
      fill_in 'promo_code', with: 'FREESHIPPING'
      click_button t('workarea.storefront.carts.add')

      visit storefront.checkout_addresses_path
      fill_in_email
      fill_in_shipping_address
      uncheck 'same_as_shipping'
      fill_in_billing_address
      click_button t('workarea.storefront.checkouts.continue_to_shipping')

      assert_current_path(storefront.checkout_shipping_path)

      assert(page.has_content?('Ground $0.00'))
      assert(page.has_content?('Next Day $20.00'))

      assert(page.has_content?('$0.35')) # Tax
      assert(page.has_content?('$5.35')) # Total
    end

    def test_successfully_checking_out
      assert_current_path(storefront.checkout_addresses_path)
      fill_in_email
      fill_in_shipping_address
      uncheck 'same_as_shipping'
      fill_in_billing_address
      click_button t('workarea.storefront.checkouts.continue_to_shipping')

      assert_current_path(storefront.checkout_shipping_path)
      assert(page.has_content?('Success'))
      click_button t('workarea.storefront.checkouts.continue_to_payment')

      assert_current_path(storefront.checkout_payment_path)
      assert(page.has_content?('Success'))

      assert(page.has_content?('22 S. 3rd St.'))
      assert(page.has_content?('Philadelphia'))
      assert(page.has_content?('PA'))
      assert(page.has_content?('19106'))
      assert(page.has_content?('Ground'))

      assert(page.has_content?('Integration Product'))

      assert(page.has_content?('$5.00')) # Subtotal
      assert(page.has_content?('$7.00')) # Shipping
      assert(page.has_content?('$0.84')) # Tax
      assert(page.has_content?('$12.84')) # Total

      fill_in_credit_card
      click_button t('workarea.storefront.checkouts.place_order')

      assert_current_path(storefront.checkout_confirmation_path)

      assert(page.has_content?('Success'))
      assert(page.has_content?(t('workarea.storefront.flash_messages.order_placed')))
      assert(page.has_content?(Order.first.id))

      assert(page.has_content?('22 S. 3rd St.'))
      assert(page.has_content?('Philadelphia'))
      assert(page.has_content?('PA'))
      assert(page.has_content?('19106'))
      assert(page.has_content?('Ground'))

      assert(page.has_content?('1019 S. 47th St.'))
      assert(page.has_content?('Philadelphia'))
      assert(page.has_content?('PA'))
      assert(page.has_content?('19143'))

      # TODO: Order confirmation should display card type in payment summary
      # assert(page.has_content?('Test Card'))
      assert(page.has_content?('XX-1'))

      assert(page.has_content?('Integration Product'))

      assert(page.has_content?('$5.00')) # Subtotal
      assert(page.has_content?('$7.00')) # Shipping
      assert(page.has_content?('$0.84')) # Tax
      assert(page.has_content?('$12.84')) # Total
    end
  end
end
